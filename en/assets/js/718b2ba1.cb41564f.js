"use strict";(self.webpackChunkedna_docs=self.webpackChunkedna_docs||[]).push([["14605"],{3367:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>r,toc:()=>d,default:()=>l,metadata:()=>a,assets:()=>c,contentTitle:()=>o});var a=JSON.parse('{"id":"Yandex_Metrika_Settings","title":"Yandex Metrica Settings","description":"You can use Yandex Metrica to track \u0421hat events. The Chat widget automatically sends a number of events to Yandex Metrica based on customer requests to the Chat.","source":"@site/i18n/en/docusaurus-plugin-content-docs-web/version-6.23.0/Yandex_Metrika_Settings.md","sourceDirName":".","slug":"/Yandex_Metrika_Settings","permalink":"/en/web/6.23.0/Yandex_Metrika_Settings","draft":false,"unlisted":false,"tags":[],"version":"6.23.0","lastUpdatedAt":1757984262000,"sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"mainSidebar","previous":{"title":"Examples of Chat Configuration","permalink":"/en/web/6.23.0/Examples"},"next":{"title":"Changelog","permalink":"/en/web/6.23.0/Changelog"}}'),s=n(85893),i=n(50065);let r={sidebar_position:11},o="Yandex Metrica Settings",c={},d=[{value:"Counter Connection",id:"counter-connection",level:3},{value:"Chat Events",id:"chat-events",level:3}];function h(e){let t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"yandex-metrica-settings",children:"Yandex Metrica Settings"})}),"\n",(0,s.jsxs)(t.p,{children:["You can use ",(0,s.jsx)(t.a,{href:"https://metrica.yandex.com/promo/product",children:"Yandex Metrica"})," to track \u0421hat events. The Chat widget automatically sends a number of events to Yandex Metrica based on customer requests to the Chat."]}),"\n",(0,s.jsx)(t.h3,{id:"counter-connection",children:"Counter Connection"}),"\n",(0,s.jsxs)(t.p,{children:["Create a counter in Yandex Metrica. Enter the name of the counter and the address of the website where you want to place the counter. Yandex Metrica will then generate a counter code. From the code received, you need a counter initialization block (the ",(0,s.jsx)(t.code,{children:"ym"})," method), which takes three arguments: the counter number, the function name and the parameters:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'ym(9760117, "init", { clickmap:true, trackLinks:true, accurateTrackBounce:true });\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In the Chat settings, add the settings block to the ",(0,s.jsx)(t.code,{children:"webchat"})," section:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'"yaMetrika": {\n	"account": <account>,\n	"options": <options>\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Replace the ",(0,s.jsx)(t.code,{children:"account"})," field value with the counter number, and the ",(0,s.jsx)(t.code,{children:"options"})," field value with the parameters:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'"yaMetrika": {\n	"account": 9760117,\n	"options": { clickmap:true, trackLinks:true, accurateTrackBounce:true }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"chat-events",children:"Chat Events"}),"\n",(0,s.jsx)(t.p,{children:'You can manually set a number of goals to be displayed in Yandex Metrica. To do this, create a "JavaScript event" goal, select "Matches" in the goal ID and specify the event you want to track. List of events:'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Chat_established"}),": the conversation between the customer and the operator has been established."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Offline_message_sent"}),":  the customer has sent an offline message."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_User_gave_contacts_during_chat"}),": the customer has completed the welcome form."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Offline_form_shown"}),": the feedback form is displayed to the customer in the unavailable Chat mode."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Invitation_shown"}),": an invitation to the Chat is displayed to the customer."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Invitation_rejected"}),": the customer has closed the Chat invitation."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Invitation_accepted"}),": the customer has opened the Chat with a visible invitation to the Chat."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Chat_requested"}),": the customer has opened the Chat without an invitation to the Chat."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ednaCC_Quick_reply_clicked"}),": the customer has pressed one of the bot's quick response buttons."]}),"\n"]})]})}function l(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:()=>o,a:()=>r});var a=n(67294);let s={},i=a.createContext(s);function r(e){let t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);