"use strict";(self.webpackChunkedna_docs=self.webpackChunkedna_docs||[]).push([[6323],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>f});var n=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(i),f=o,h=d["".concat(l,".").concat(f)]||d[f]||u[f]||r;return i?n.createElement(h,a(a({ref:t},p),{},{components:i})):n.createElement(h,a({ref:t},p))}));function f(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=i.length,a=new Array(r);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<r;c++)a[c]=i[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},64763:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=i(87462),o=(i(67294),i(3905)),r=i(65488),a=i(85162);const s={sidebar_position:4},l="\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",c={unversionedId:"getting-started/notifications",id:"version-4.11.0/getting-started/notifications",title:"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",description:"\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0432\u044b\u0437\u043e\u0432\u044b SDK \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f push \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439:",source:"@site/ios_versioned_docs/version-4.11.0/getting-started/notifications.md",sourceDirName:"getting-started",slug:"/getting-started/notifications",permalink:"/ios/getting-started/notifications",draft:!1,tags:[],version:"4.11.0",lastUpdatedAt:1671018258,formattedLastUpdatedAt:"14 \u0434\u0435\u043a. 2022 \u0433.",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mainSidebar",previous:{title:"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430",permalink:"/ios/getting-started/usage"},next:{title:"\u041c\u0435\u0442\u043e\u0434\u044b \u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430",permalink:"/ios/getting-started/methods"}},p={},u=[],d={toc:u};function f(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"},"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439"),(0,o.kt)("p",null,"\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0432\u044b\u0437\u043e\u0432\u044b SDK \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f push \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439:"),(0,o.kt)(r.Z,{groupId:"ios-language",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objective-c"}],mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"swift",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"// MARK: - Remote Notifications\n    \nfunc application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n    Threads.threads().applicationDidRegisterForRemoteNotifications(withDeviceToken: deviceToken)\n}\n    \nfunc application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n    Threads.threads().applicationDidFailToRegisterForRemoteNotificationsWithError(error)\n}\n\n// MARK: - UNUserNotificationCenterDelegate\n\nfunc userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {\n    // Check for application launched from notification\n    if response.actionIdentifier == UNNotificationDefaultActionIdentifier {\n        let userInfo = response.notification.request.content.userInfo\n        if Threads.threads().isThreadsOriginPushUserInfo(userInfo) {\n            // Application launched from Threads notification\n        } else {\n            // Application launched from other notifications\n        }\n    }\n    completionHandler()\n}\n"))),(0,o.kt)(a.Z,{value:"objective-c",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objectivec"},"#pragma mark - Remote Notifications\n\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n    [[Threads threads] applicationDidRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n}\n\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {\n    [[Threads threads] applicationDidFailToRegisterForRemoteNotificationsWithError:error];\n}\n\n#pragma mark - UNUserNotificationCenterDelegate\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)(void))completionHandler {\n    // Check for application launched from notification\n    if ([response.actionIdentifier isEqualToString: UNNotificationDefaultActionIdentifier]) {\n        NSDictionary *userInfo = response.notification.request.content.userInfo;\n        if ([[Threads threads] isThreadsOriginPushUserInfo:userInfo]) {\n            // Application launched from Threads notification\n        } else {\n            // Application launched from other notifications\n        }\n    }\n    completionHandler();\n}\n")))),(0,o.kt)("h1",{id:"\u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f-\u0441-push-lite"},"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 Push Lite"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"\u042d\u0442\u043e\u0442 \u0440\u0430\u0437\u0434\u0435\u043b \u0430\u043a\u0442\u0443\u0430\u043b\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0443\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f SDK push-lite \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439."),(0,o.kt)("p",{parentName:"admonition"},"\u0414\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 push-lite \u0441\u043b\u0435\u0434\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u043c \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 SDK")),(0,o.kt)("p",null,"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Threads \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0434\u0442\u0438 \u043f\u0435\u0440\u0432\u043e\u0439"),(0,o.kt)(r.Z,{groupId:"ios-language",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objective-c"}],mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"swift",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        \n        // Step 1: Configure Threads Framework\n        let threads = Threads.threads()\n        threads.registrationAtStartupDisable = SettingsBundleHelper.getRegistrationAtStartupDisable()\n        threads.isClientIdEncrypted = Configuration.clientIdEncrypted()\n        \n        threads.isShowsNetworkActivity = true\n        \n        guard let providerUid = Configuration.providerUid() else { fatalError("Set providerUid for threadsGate transportProtocol.") }\n        threads.configureTransportProtocol(\n            with: self,\n            webSocketURL: URL(string: Configuration.webSocketURL())!,\n            providerUid: providerUid,\n            restURL: URL(string: Configuration.restServerURL())!,\n            dataStoreURL: URL(string: Configuration.dataStoreURL())!\n        )\n        \n        // Step 2: Configure PushLite Framework\n        pushLite = EDNAPushLite(delegate: self)\n        pushLite.appGroup = "group.io.edna.chatcenter.demo"\n        pushLite.autoRegisterForNotification = false\n        pushLite.logEnable = true\n        pushLite.start()\n        \n        // Step 3: Register device for remote notifications\n        ...\n\n        return true\n    }\n'))),(0,o.kt)(a.Z,{value:"objective-c",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    \n    // Step 1: Configure Threads Framework\n    Threads *threads = [Threads threads];\n    threads.isDebugLoggingEnabled = YES;\n    \n    [threads configureTransportProtocolWithDelegate:self\n                                                   providerUid:@"PROVIDER_UID"\n                                                   webSocketURL: [NSURL URLWithString:@"\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 WebSocket API"]\n                                                   restURL: [NSURL URLWithString:@"\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 REST API"]\n                                                   dataStoreURL: [NSURL URLWithString:@"\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 DataStore API"]];\n    \n    // Step 2: Configure PushLite Framework\n    pushLite = [[EDNAPushLite alloc] initWithDelegate: self];\n    pushLite.appGroup = @"group.io.edna.chatcenter.demo";\n    pushLite.autoRegisterForNotification = NO;\n    pushLite.logEnable = YES;\n    [pushLite start];\n        \n    // Step 3: Register device for remote notifications\n    ...\n        \n    return YES;\n}\n')))),(0,o.kt)("p",null,"\u0412 \u0442\u0430\u043a\u043e\u043c \u0436\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0437 \u0434\u0435\u043b\u0435\u0433\u0430\u0442\u043e\u0432 \u043d\u043e\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438"),(0,o.kt)(r.Z,{groupId:"ios-language",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objective-c"}],mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"swift",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        Threads.threads().applicationDidRegisterForRemoteNotifications(withDeviceToken: deviceToken)\n        pushLite.appDelegate.didRegisterForRemoteNotifications(withDeviceToken: deviceToken)\n    }\n    \n    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n        Threads.threads().applicationDidFailToRegisterForRemoteNotificationsWithError(error)\n        pushLite.appDelegate.didFailToRegisterForRemoteNotifications(withError: error)\n    }\n"))),(0,o.kt)(a.Z,{value:"objective-c",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objectivec"},"    - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n        [[Threads threads] applicationDidRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n        [[pushLite appDelegate] didRegisterForRemoteNotificationsWithDeviceToken: deviceToken];\n    }\n\n    - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {\n        [[Threads threads] applicationDidFailToRegisterForRemoteNotificationsWithError:error];\n        [[pushLite appDelegate] didFailToRegisterForRemoteNotificationsWithError: error];\n    }\n")))))}f.isMDXComponent=!0},85162:(e,t,i)=>{i.d(t,{Z:()=>a});var n=i(67294),o=i(86010);const r="tabItem_Ymn6";function a(e){let{children:t,hidden:i,className:a}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,a),hidden:i},t)}},65488:(e,t,i)=>{i.d(t,{Z:()=>f});var n=i(87462),o=i(67294),r=i(86010),a=i(72389),s=i(67392),l=i(7094),c=i(12466);const p="tabList__CuJ",u="tabItem_LNqP";function d(e){var t,i;const{lazy:a,block:d,defaultValue:f,values:h,groupId:m,className:g}=e,v=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:v.map((e=>{let{props:{value:t,label:i,attributes:n}}=e;return{value:t,label:i,attributes:n}})),T=(0,s.l)(b,((e,t)=>e.value===t.value));if(T.length>0)throw new Error('Docusaurus error: Duplicate values "'+T.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const N=null===f?f:null!=(t=null!=f?f:null==(i=v.find((e=>e.props.default)))?void 0:i.props.value)?t:v[0].props.value;if(null!==N&&!b.some((e=>e.value===N)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:R}=(0,l.U)(),[y,D]=(0,o.useState)(N),w=[],{blockElementScrollPositionUntilNextRender:U}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==y&&b.some((t=>t.value===e))&&D(e)}const E=e=>{const t=e.currentTarget,i=w.indexOf(t),n=b[i].value;n!==y&&(U(t),D(n),null!=m&&R(m,String(n)))},S=e=>{var t;let i=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{var n;const t=w.indexOf(e.currentTarget)+1;i=null!=(n=w[t])?n:w[0];break}case"ArrowLeft":{var o;const t=w.indexOf(e.currentTarget)-1;i=null!=(o=w[t])?o:w[w.length-1];break}}null==(t=i)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",p)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},g)},b.map((e=>{let{value:t,label:i,attributes:a}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>w.push(e),onKeyDown:S,onClick:E},a,{className:(0,r.Z)("tabs__item",u,null==a?void 0:a.className,{"tabs__item--active":y===t})}),null!=i?i:t)}))),a?(0,o.cloneElement)(v.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function f(e){const t=(0,a.Z)();return o.createElement(d,(0,n.Z)({key:String(t)},e))}}}]);