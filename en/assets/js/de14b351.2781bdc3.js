"use strict";(self.webpackChunkedna_docs=self.webpackChunkedna_docs||[]).push([[4325],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=i.createContext({}),l=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return i.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,h=p["".concat(d,".").concat(m)]||p[m]||u[m]||r;return t?i.createElement(h,o(o({ref:n},c),{},{components:t})):i.createElement(h,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(7462),a=(t(7294),t(3905));const r={sidebar_position:3},o="Configuring Notifications",s={unversionedId:"getting-started/notifications",id:"version-4.4.0/getting-started/notifications",title:"Configuring Notifications",description:"Firebase",source:"@site/i18n/en/docusaurus-plugin-content-docs-android/version-4.4.0/getting-started/notifications.md",sourceDirName:"getting-started",slug:"/getting-started/notifications",permalink:"/en/android/getting-started/notifications",draft:!1,tags:[],version:"4.4.0",lastUpdatedAt:1660743495,formattedLastUpdatedAt:"Aug 17, 2022",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"mainSidebar",previous:{title:"Configuration",permalink:"/en/android/getting-started/usage"},next:{title:"Graphic Scheme",permalink:"/en/android/getting-started/graphics"}},d={},l=[{value:"Firebase",id:"firebase",level:2},{value:"Adding google-services.json",id:"adding-google-servicesjson",level:3},{value:"Configuring Manifest",id:"configuring-manifest",level:3},{value:"Additional Info",id:"additional-info",level:4},{value:"Push Notifications",id:"push-notifications",level:3},{value:"Alternative Option if You Use Firebase",id:"alternative-option-if-you-use-firebase",level:3},{value:"Huawei Media Services (HMS)",id:"huawei-media-services-hms",level:2},{value:"Enabling Push Notifications",id:"enabling-push-notifications",level:3},{value:"Configuring AndroidManifest",id:"configuring-androidmanifest",level:3},{value:"Push Lite Integration",id:"push-lite-integration",level:2}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuring-notifications"},"Configuring Notifications"),(0,a.kt)("h2",{id:"firebase"},"Firebase"),(0,a.kt)("h3",{id:"adding-google-servicesjson"},"Adding google-services.json"),(0,a.kt)("p",null,"You can use one of two options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using your Firebase account, form a\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"google-services.json")," file. To register in the system, specify your\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"project_number"),"\xa0and\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"API_KEY"),"\xa0values from the Firebase console (not from google-services.json)."),(0,a.kt)("li",{parentName:"ul"},"Using your Firebase account, specify\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"applicationId"),"\xa0of your app, and we will send you\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"google-services.json"),".")),(0,a.kt)("p",null,"You need to add ",(0,a.kt)("inlineCode",{parentName:"p"},"google-services.json")," file to the project next to\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml")),(0,a.kt)("h3",{id:"configuring-manifest"},"Configuring Manifest"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Permissions:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<permission android:name="${applicationId}.permission.pushserver.RECEIVE"\n            android:protectionLevel="signature" />\n<uses-permission android:name="android.permission.INTERNET" />\n<uses-permission android:name="${applicationId}.permission.pushserver.RECEIVE" />\n')),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Handling short mfms push notifications")),(0,a.kt)("p",null,"a) If a default handler is used (processing of your mfms push notifications is not required)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<receiver\n    android:name="im.threads.push.ThreadsPushBroadcastReceiver"\n    android:exported="false"\n    android:permission="${applicationId}.permission.pushserver.RECEIVE">\n    <intent-filter>\n        <action android:name="com.pushserver.android.NEW_PUSH_MESSAGE_EVENT" />\n        <action android:name="com.pushserver.android.RECEIVER_CHANGED_EVENT" />\n        <action android:name="com.pushserver.android.DEVICE_ADDRESS_CHANGED_EVENT" />\n        <action android:name="com.pushserver.android.HAS_SECURED_MESSAGE" />\n        <action android:name="com.pushserver.android.ERROR_EVENT" />\n    </intent-filter>\n</receiver>\n')),(0,a.kt)("p",null,"b) If a custom handler is used (processing of your mfms push notifications is required) (for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"im.threads.android.broadcastReceivers.CustomPushBroadcastReceiver"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<receiver\n    android:name="im.threads.android.broadcastReceivers.CustomPushBroadcastReceiver"\n    android:exported="false"\n    android:permission="${applicationId}.permission.pushserver.RECEIVE">\n    <intent-filter>\n        <action android:name="com.pushserver.android.NEW_PUSH_MESSAGE_EVENT" />\n        <action android:name="com.pushserver.android.RECEIVER_CHANGED_EVENT" />\n        <action android:name="com.pushserver.android.DEVICE_ADDRESS_CHANGED_EVENT" />\n        <action android:name="com.pushserver.android.HAS_SECURED_MESSAGE" />\n        <action android:name="com.pushserver.android.ERROR_EVENT" />\n    </intent-filter>\n</receiver>\n')),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Handling long mfms push notifications")),(0,a.kt)("p",null,"a) If a default handler is used (processing of your mfms push notifications is not required)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.pushserver.android.service"\n    android:value="im.threads.push.ThreadsPushServerIntentService" />\n')),(0,a.kt)("p",null,"b) If a custom handler is used (processing of your mfms push notifications is required) (for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"im.threads.android.services.CustomPushServerIntentService"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<service\n    android:name="im.threads.android.services.CustomPushServerIntentService"\n    android:exported="false" />\n\n<meta-data\n    android:name="com.pushserver.android.service"\n    android:value="im.threads.android.services.CustomPushServerIntentService" />\n')),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Meta data:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="im.threads.getServerUrl"\n    android:value="YOUR_DATASTORE_URL" />\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"YOUR_DATASTORE_URL")," parameter will be issued to you once you connect."),(0,a.kt)("h4",{id:"additional-info"},"Additional Info"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Enabling of debug logging of the push library:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<meta-data\n    android:name="com.pushserver.android.logs"\n    android:value="true"/>\n')),(0,a.kt)("h3",{id:"push-notifications"},"Push Notifications"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To work with short mfms push notifications, you need to inherit from the ",(0,a.kt)("inlineCode",{parentName:"li"},"ThreadsPushBroadcastReceiver")," class and redefine the method.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected void onNewPushNotification(final Context context, final String alert, final Bundle bundle);\n")),(0,a.kt)("p",null,"For the chat to work correctly, do not forget to call ",(0,a.kt)("inlineCode",{parentName:"p"},"super.onNewPushNotification(context, alert, bundle);"),'. The parent method analyzes the signature of incoming push notifications and processes only those that have the origin attribute with the value "threads".'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To work with long mfms push notifications, you need to inherit from the ",(0,a.kt)("inlineCode",{parentName:"li"},"ThreadsPushServerIntentService")," class and redefine the method.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Override\nprotected boolean saveMessages(List<PushMessage> list);\n")),(0,a.kt)("p",null,"For the chat to work correctly, do not forget to call\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"super.saveMessages(list);"),'.\xa0The parent method analyzes the signature of incoming push notifications and processes only those that have the origin attribute with the value "threads".'),(0,a.kt)("h3",{id:"alternative-option-if-you-use-firebase"},"Alternative Option if You Use Firebase"),(0,a.kt)("p",null,"Inherit the service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class CustomPushFcmIntentService extends ThreadsPushFcmIntentService {\n    @Override\n    public void onNewToken(String token) {\n        super.onNewToken(token);\n        //your handling of receiving a new token here\n    }\n\n    @Override\n    public void onMessageReceived(RemoteMessage message) {\n        super.onMessageReceived(message);\n        //your message handling here\n    }\n}\n")),(0,a.kt)("p",null,"Add it to AndroidManifest.xml:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<service android:name=".push.CustomPushFcmIntentService">\n    <intent-filter>\n        <action android:name="com.google.firebase.MESSAGING_EVENT" />\n    </intent-filter>\n</service>\n')),(0,a.kt)("h2",{id:"huawei-media-services-hms"},"Huawei Media Services (HMS)"),(0,a.kt)("h3",{id:"enabling-push-notifications"},"Enabling Push Notifications"),(0,a.kt)("p",null,"Add HMS to the project\xa0",(0,a.kt)("a",{parentName:"p",href:"https://developer.huawei.com/consumer/en/doc/development/HMSCore-Guides/android-app-quickstart-0000001071490422"},"https://developer.huawei.com/consumer/en/doc/development/HMSCore-Guides/android-app-quickstart-0000001071490422")),(0,a.kt)("p",null,"In Threads Gate in the ",(0,a.kt)("strong",{parentName:"p"},"applications")," table, your app must be added (if Firebase push notifications are used in the project, two records will be in the table - one for each type of push notifications)."),(0,a.kt)("h3",{id:"configuring-androidmanifest"},"Configuring AndroidManifest"),(0,a.kt)("p",null,"Add the following meta-data to the manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'    <meta-data\n        android:name="im.threads.threadsGateHCMProviderUid"\n        android:value="YOUR_THREADS_GATE_HCM_PROVIDER_UID"/>\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"im.threads.threadsGateHCMProviderUid - App identifier in \u0432 Threads gate (from the ",(0,a.kt)("strong",{parentName:"li"},"applications")," table)")),(0,a.kt)("p",null,"It is highly probable that your app already sends push notifications to your clients via HCM. To process incoming push notifications, you need to create a child of the\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadsPushHcmIntentService")," class\xa0(don't forget to specify your service in the manifest)."),(0,a.kt)("p",null,"\xa0\n",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadsPushHcmIntentService"),"\xa0(is a child of\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"HcmPushService"),"\xa0and receives the com.huawei.push.action.MESSAGING_EVENT events) stores the HCM token in SharedPreferences of the library to pass it to the required transport, if necessary (in our case, when registering in Threads Gate). Threads Gate will send HCM notifications if a client has no active socket connection (it only exists while the client sees the chat screen)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class CustomPushHcmIntentService extends ThreadsPushHcmIntentService {\n    @Override\n    public void onNewToken(String token) {\n        super.onNewToken(token);\n        ...\n    }\n\n    @Override\n    public void onMessageReceived(RemoteMessage message) {\n        super.onMessageReceived(message);\n        ...\n    }\n}\n")),(0,a.kt)("h2",{id:"push-lite-integration"},"Push Lite Integration"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"To set up and integrate push-lite, follow the instructions provided with the SDK.")),(0,a.kt)("p",null,"After you successfully complete the integration with the required push clients, you can start the integratiion with Chat Center. To do this, you need to add the following logic to transfer tokens and messages to the SDK:"),(0,a.kt)("p",null,"For Firebase:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class CustomPushFcmIntentService : FcmPushService() {\n   override fun onNewToken(token: String) {\n       super.onNewToken(token)\n       ChatCenterPushMessageHelper.setFcmToken(token)\n   }\n   override fun onMessageReceived(message: RemoteMessage) {\n       super.onMessageReceived(message)\n       ChatCenterPushMessageHelper.process(this, message.data)\n   }\n}\n")),(0,a.kt)("p",null,"For HMS:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class CustomPushHcmIntentService : HcmPushService() {\n   override fun onNewToken(token: String) {\n       super.onNewToken(token)\n       ChatCenterPushMessageHelper.setHcmToken(token)\n   }\n   override fun onMessageReceived(message: RemoteMessage) {\n       super.onMessageReceived(message)\n       ChatCenterPushMessageHelper.process(\n           this,\n           CommonUtils.base64JsonStringToBundle(message.data)\n       )\n   }\n}\n")),(0,a.kt)("p",null,"After that, you need to add declaration of the both services to the manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<service android:name=".push.CustomPushFcmIntentService"\n   android:exported="false">\n   <intent-filter>\n       <action android:name="com.google.firebase.MESSAGING_EVENT" />\n   </intent-filter>\n</service>\n\n<service\n   android:name=".push.CustomPushHcmIntentService"\n   android:exported="false">\n   <intent-filter>\n       <action android:name="com.huawei.push.action.MESSAGING_EVENT" />\n   </intent-filter>\n</service>\n')),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Note how the ",(0,a.kt)("inlineCode",{parentName:"p"},"PushController.getInstance(this).init()")," method is added in\n",(0,a.kt)("inlineCode",{parentName:"p"},"Application.onCreate()")," as described in step 1.2.3 of the push-lite documentation.")))}u.isMDXComponent=!0}}]);